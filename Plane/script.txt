var context;
var backgroundColor = "#6dd3ff";
var myCanvas, myVar;
var lopatki2 = [];
var a=0;
var tree, trees = [];
var chmura, chmury = [];
var myChmuraVar;
var height=0;
var heightAdd=true;
var r=0;
var rAdd=true;
var ms=0;
var chmura_kolor=0;
var s=0;
var sAdd=true;
//=================================================================================================

function updateCanvas() {
	myCanvas = document.getElementById( "myCanvas" );	  
    context = myCanvas.getContext( "2d" );
    context.save();  
    //tło 
    context.transform(myCanvas.width, 0,0, myCanvas.height,0,0);
    context.fillStyle = backgroundColor;  
    context.fillRect(0,0,1,1); 
     
    //góra
    context.setTransform(1000,500,0,400,0,1000);
    context.fillStyle="#387221";
    context.beginPath();
    context.arc(0, 0, 1, 0, Math.PI * 2);
    context.closePath();  

   //łopatki

       lopatka=new lopatki(30,300);
       lopatki2.push(lopatka);  
       context.save();
       context.restore();     
          
       myVar = setTimeout( nextFrame, 80);
       myTreeVar = setTimeout( nextTreeAnimation,200);
       myChmuraVar = setTimeout( nextChmuraAnimation,80);
}

function nextFrame() {
    context = myCanvas.getContext( "2d" );    
    context.setTransform(myCanvas.width, 0,0, myCanvas.height,0,0);
    context.fillStyle = backgroundColor;  
    context.fillRect(0,0,1,1);

    //góra i niebo
    context.setTransform(1000,500,0,400,0,1000);
    context.fillStyle="#387221";
    context.beginPath();
    context.arc(0, 0, 1, 0, Math.PI * 2);
    context.closePath();
    context.fill();
    context.restore();
    context.save();  

     for ( i = 0; i < trees.length; i ++ ) {
        var tree = trees[ i ];
        var treeScale = tree.S;
        if ( treeScale == 1 ) { 
            tree.setReferencePoint( tree.X0 - 1, tree.Y0 );         
            context.setTransform(15, 0, 0, 20, tree.Y0, tree.X0 );
            tree.display();           
        }    
    }    

    context.setTransform(800,490, 0, 1190, 0, -600);
    context.fillStyle = "#6dd3ff";
    context.fillRect(0, 0, 1, 1); 

    context.setTransform(150,0,0,150,800,0);
    context.fillStyle="yellow";
    context.beginPath();
    context.arc(0, 0,1, 0, Math.PI * 2);
    context.filter='blur(5px)'
    context.closePath();
    context.fill();  

    if(s ==  100) sAdd = false;
   	if(s ==  0) sAdd = true;
   	if(ms%5 == 0){
   	if(sAdd) s+=5;
   	else s-=5;}
    context.setTransform(300-s,0,0,300-s,800,0);
    context.fillStyle="yellow";
    context.beginPath();
    context.arc(0, 0,1, 0, Math.PI * 2);
    context.filter='blur(1000px)'
    context.closePath();
    context.fill();
    context.restore();
    context.save(); 

    //szkielet samolotu
   	if(height ==  16) heightAdd = false;
   	if(height ==  0) heightAdd = true;
   	if(ms%5 == 0){
   	if(heightAdd) height+=1;
   	else height-=1;}
   	context.translate(450, 320-height);
    context.setTransform(100, 0, 0, 100, 350, 250-height);
    context.fillStyle = "#8b0000";
    context.fillRect(0, 0, 1, 1); 

    context.setTransform(10, 0, 0, 160, 445, 200-height);
	context.fillStyle = "#8b0010";
    context.fillRect(0, 0, 1, 1);
    context.restore();
    context.save();

    context.setTransform(10, 0, 0, 160, 350, 200-height);
	context.fillStyle = "#8b0010";
    context.fillRect(0, 0, 1, 1);
   
    context.setTransform(10, 0, 0, 160, 225, 200-height);
	context.fillStyle = "black";
    context.fillRect(0, 0, 1, 1);

    context.setTransform(10, 0, 0, 160, 565, 200-height);
	context.fillStyle = "black";
    context.fillRect(0, 0, 1, 1);    

    context.setTransform(400, 0, 0, 30, 200, 200-height);
	context.fillStyle = "brown";
    context.fillRect(0, 0, 1, 1);   

    context.setTransform(400, 0, 0, 30, 200, 355-height);
	context.fillStyle = "brown";
    context.fillRect(0, 0, 1, 1);        

    context.setTransform(70, 0, 0, 30, 367, 220-height);
	context.fillStyle = "#7F7FFF";
    context.fillRect(0, 0, 1, 1);  
  
    //chmury
     for ( i = 0; i < chmury.length; i ++ ) {
        var chmura = chmury[ i ];
        var cloudScale = chmura.S;
        if ( cloudScale == 1 ) {          
            chmura.setReferencePoint( chmura.X0 - 2.3, chmura.Y0 );         
            context.setTransform(100, 0, 0, 50, chmura.X0, chmura.Y0 );
            chmura.display();           
        }    
    }

	//silnik
    context.setTransform(20,0,0,20,400,300-height);
    context.fillStyle="black";
    context.beginPath();
    context.arc(0, 0, 1.9, 0, Math.PI * 2);
    context.closePath();
    context.fill();  

    context.setTransform(20,0,0,20,400,300-height);
    context.fillStyle="red";
    context.beginPath();
    context.arc(0, 0, 1.5, 0, Math.PI * 2);
    context.closePath();
    context.fill();
    context.restore();    

    //łopatki
    a+=50;
    for(i=0;i<lopatki2.length;i++){
        lopatka=lopatki2[i];      
        context.save();
        lopatka.display(a);        
    }   

    context.setTransform(10,0,0,10,400,300-height);
    context.fillStyle="brown";
    context.beginPath();
    context.arc(0, 0, 1, 0, Math.PI * 2);
    context.closePath();
    context.fill();   

    myVar = setTimeout(nextFrame, 80);
}

//=================================================================================================
function Tree( rX, rY ) {
    this.X = 1;
    this.Y = 5;
    this.trX = rX;
    this.trY = rY;

    this.display = function() {
    	
    	context.save();
        context.fillStyle = "#800000";        
        context.transform(1,0,0,2.5,this.X-0.5,this.Y);
        context.fillRect(0,0,1,1); 
        context.restore();         
        
        context.save();
        context.transform(1.5,0,0,1.5,this.X,this.Y); 
        context.fillStyle = "#194719";       
        context.beginPath();
        context.arc(0,0,1,0,Math.PI*2);
        context.closePath();
        context.fill();
        context.restore();

        context.save();
        context.lineWidth = 0.1;
        context.transform(1.5,0,0,1.5,this.X,this.Y); 
        context.fillStyle = "black";       
        context.beginPath();
        context.arc(0,0,1,0,Math.PI*2);
        context.closePath();
        context.stroke();
        context.restore();
        
    }

    this.setReferencePoint = function( x, y ) {
        this.X0 = x;
        this.Y0 = y;
    }

    this.setScale = function( s ) {
        this.S = s;
    }
}
function nextTreeAnimation( ) {
    var isOK = Math.floor( Math.random() * 5 );   
    isOK = 1;
    if ( isOK === 1 ) {
        var cY = Math.floor( Math.random() * ( myCanvas.width - 5 ) );
        tree = new Tree( myCanvas.width, cY );
        if ( cY < myCanvas.height / 2 ) tree.setScale( 1 );
        else if ( cY < myCanvas.height / 2 ) tree.setScale( 2 );
        else tree.setScale( 3 );
        tree.setReferencePoint( myCanvas.width, cY );
        trees.push( tree );
    }
    myTreeVar = setTimeout( nextTreeAnimation,350);
}

function Chmura( rX, rY ) {
    this.X = 0;
    this.Y = 0;
    this.trX = rX;
    this.trY = rY;

    this.display = function() {  

    	context.save(); 
    	context.transform(1, 0, 0, 1, this.X, this.Y);
        context.fillStyle="white";
        context.filter='blur(5px) opacity(0.6)';
        context.beginPath();        
        context.arc(0,0,1,0,Math.PI*2);
        context.closePath();
        context.fill();
        context.restore();
    }

    this.setReferencePoint = function( x, y ) {
        this.X0 = x;
        this.Y0 = y;
    }

    this.setScale = function( s ) {
        this.S = s;
    }
}
function nextChmuraAnimation( ) {
    var isOK = Math.floor( Math.random() * 5 );   
    isOK = 1;
    if ( isOK === 1 ) {
        var cY = Math.floor( Math.random() * ( myCanvas.width - 5 ) );
        chmura = new Chmura( myCanvas.width, cY );
        if ( cY < myCanvas.height / 1.5 ) chmura.setScale( 1 );
        else if ( cY < myCanvas.height / 1.5 ) chmura.setScale( 2 );
        else chmura.setScale( 3 );
        chmura.setReferencePoint( myCanvas.width, cY );
        chmury.push( chmura );
    }
    myChmuraVar = setTimeout( nextChmuraAnimation,5000);
}

function lopatki(w,h){
    this.X = 0;
    this.Y = 0;
    this.width = w;
    this.height = h;  
    this.display= function(a){
        context.save();      
        context.translate(400,300-height);
        context.transform(Math.cos(a*Math.PI/-180), Math.sin(a*Math.PI/-180), -Math.sin(a*Math.PI/-180), Math.cos(a*Math.PI/-180), 0, 0);
        context.transform(w, 0, 0, h, this.X, this.Y);        
        context.fillStyle="black";
        context.filter='blur(15px)'
        context.beginPath();
        context.arc(0, 0, 0.31,0, Math.PI*2);
        context.closePath();
        context.fill();
        context.restore();
    }
}


